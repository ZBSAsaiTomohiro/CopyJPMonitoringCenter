'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.42000
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
'
Namespace MSRUIJAG00MSRUIJAW00
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MSRUIJAW00Soap", [Namespace]:="http://tempuri.org/MSRUIJAW00/Service1")>  _
    Partial Public Class MSRUIJAW00
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private mSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mSetExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mSetRuiautoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mCSVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.MSRUIJAG00.My.MySettings.Default.MSRUIJAG00_MSRUIJAG00MSRUIJAW00_MSRUIJAW00
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event mSetCompleted As mSetCompletedEventHandler
        
        '''<remarks/>
        Public Event mSetExCompleted As mSetExCompletedEventHandler
        
        '''<remarks/>
        Public Event mSetRuiautoCompleted As mSetRuiautoCompletedEventHandler
        
        '''<remarks/>
        Public Event mCSVCompleted As mCSVCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MSRUIJAW00/Service1/mSet", RequestNamespace:="http://tempuri.org/MSRUIJAW00/Service1", ResponseNamespace:="http://tempuri.org/MSRUIJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSet( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String) As String
            Dim results() As Object = Me.Invoke("mSet", New Object() {pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSet( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSet", New Object() {pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSet(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSetAsync( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String)
            Me.mSetAsync(pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSetAsync( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String,  _
                    ByVal userState As Object)
            If (Me.mSetOperationCompleted Is Nothing) Then
                Me.mSetOperationCompleted = AddressOf Me.OnmSetOperationCompleted
            End If
            Me.InvokeAsync("mSet", New Object() {pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT}, Me.mSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSetCompleted(Me, New mSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MSRUIJAW00/Service1/mSetEx", RequestNamespace:="http://tempuri.org/MSRUIJAW00/Service1", ResponseNamespace:="http://tempuri.org/MSRUIJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSetEx( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String) As String
            Dim results() As Object = Me.Invoke("mSetEx", New Object() {pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSetEx( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSetEx", New Object() {pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSetEx(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSetExAsync( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String)
            Me.mSetExAsync(pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSetExAsync( _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID() As String,  _
                    ByVal pstrSEND() As String,  _
                    ByVal pstrKYOKYUCD() As String,  _
                    ByVal pstrACBCDFR() As String,  _
                    ByVal pstrACBCDTO() As String,  _
                    ByVal pstrFAX1() As String,  _
                    ByVal pstrFAX2() As String,  _
                    ByVal pstrMAIL1() As String,  _
                    ByVal pstrMAIL2() As String,  _
                    ByVal pstrNXSEND() As String,  _
                    ByVal pstrLSSEND() As String,  _
                    ByVal pstrSENDSTR() As String,  _
                    ByVal pstrSENDEND() As String,  _
                    ByVal pstrMAILPASS() As String,  _
                    ByVal pstrZIPFILE() As String,  _
                    ByVal pstrBIKOU() As String,  _
                    ByVal pstrHASSEI() As String,  _
                    ByVal pstrKAIPAGE() As String,  _
                    ByVal pstrKIKAN() As String,  _
                    ByVal pstrZEROSEND() As String,  _
                    ByVal pstrSD_PRT() As String,  _
                    ByVal pstrSNDSTOP() As String,  _
                    ByVal pstrDEL() As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT() As String,  _
                    ByVal pstrEDT_DT() As String,  _
                    ByVal userState As Object)
            If (Me.mSetExOperationCompleted Is Nothing) Then
                Me.mSetExOperationCompleted = AddressOf Me.OnmSetExOperationCompleted
            End If
            Me.InvokeAsync("mSetEx", New Object() {pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT}, Me.mSetExOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSetExOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSetExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSetExCompleted(Me, New mSetExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MSRUIJAW00/Service1/mSetRuiauto", RequestNamespace:="http://tempuri.org/MSRUIJAW00/Service1", ResponseNamespace:="http://tempuri.org/MSRUIJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSetRuiauto( _
                    ByRef cdb As CDB,  _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID As String,  _
                    ByVal pstrSEND As String,  _
                    ByVal pstrKYOKYUCD As String,  _
                    ByVal pstrACBCDFR As String,  _
                    ByVal pstrACBCDTO As String,  _
                    ByVal pstrFAX1 As String,  _
                    ByVal pstrFAX2 As String,  _
                    ByVal pstrMAIL1 As String,  _
                    ByVal pstrMAIL2 As String,  _
                    ByVal pstrNXSEND As String,  _
                    ByVal pstrLSSEND As String,  _
                    ByVal pstrSENDSTR As String,  _
                    ByVal pstrSENDEND As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrZIPFILE As String,  _
                    ByVal pstrBIKOU As String,  _
                    ByVal pstrHASSEI As String,  _
                    ByVal pstrKAIPAGE As String,  _
                    ByVal pstrKIKAN As String,  _
                    ByVal pstrZEROSEND As String,  _
                    ByVal pstrSD_PRT As String,  _
                    ByVal pstrSNDSTOP As String,  _
                    ByVal pstrDEL As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT As String,  _
                    ByVal pstrEDT_DT As String) As String
            Dim results() As Object = Me.Invoke("mSetRuiauto", New Object() {cdb, pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT})
            cdb = CType(results(1),CDB)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSetRuiauto( _
                    ByVal cdb As CDB,  _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID As String,  _
                    ByVal pstrSEND As String,  _
                    ByVal pstrKYOKYUCD As String,  _
                    ByVal pstrACBCDFR As String,  _
                    ByVal pstrACBCDTO As String,  _
                    ByVal pstrFAX1 As String,  _
                    ByVal pstrFAX2 As String,  _
                    ByVal pstrMAIL1 As String,  _
                    ByVal pstrMAIL2 As String,  _
                    ByVal pstrNXSEND As String,  _
                    ByVal pstrLSSEND As String,  _
                    ByVal pstrSENDSTR As String,  _
                    ByVal pstrSENDEND As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrZIPFILE As String,  _
                    ByVal pstrBIKOU As String,  _
                    ByVal pstrHASSEI As String,  _
                    ByVal pstrKAIPAGE As String,  _
                    ByVal pstrKIKAN As String,  _
                    ByVal pstrZEROSEND As String,  _
                    ByVal pstrSD_PRT As String,  _
                    ByVal pstrSNDSTOP As String,  _
                    ByVal pstrDEL As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT As String,  _
                    ByVal pstrEDT_DT As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSetRuiauto", New Object() {cdb, pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSetRuiauto(ByVal asyncResult As System.IAsyncResult, ByRef cdb As CDB) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            cdb = CType(results(1),CDB)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSetRuiautoAsync( _
                    ByVal cdb As CDB,  _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID As String,  _
                    ByVal pstrSEND As String,  _
                    ByVal pstrKYOKYUCD As String,  _
                    ByVal pstrACBCDFR As String,  _
                    ByVal pstrACBCDTO As String,  _
                    ByVal pstrFAX1 As String,  _
                    ByVal pstrFAX2 As String,  _
                    ByVal pstrMAIL1 As String,  _
                    ByVal pstrMAIL2 As String,  _
                    ByVal pstrNXSEND As String,  _
                    ByVal pstrLSSEND As String,  _
                    ByVal pstrSENDSTR As String,  _
                    ByVal pstrSENDEND As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrZIPFILE As String,  _
                    ByVal pstrBIKOU As String,  _
                    ByVal pstrHASSEI As String,  _
                    ByVal pstrKAIPAGE As String,  _
                    ByVal pstrKIKAN As String,  _
                    ByVal pstrZEROSEND As String,  _
                    ByVal pstrSD_PRT As String,  _
                    ByVal pstrSNDSTOP As String,  _
                    ByVal pstrDEL As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT As String,  _
                    ByVal pstrEDT_DT As String)
            Me.mSetRuiautoAsync(cdb, pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSetRuiautoAsync( _
                    ByVal cdb As CDB,  _
                    ByVal pintMODE As Integer,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrID As String,  _
                    ByVal pstrSEND As String,  _
                    ByVal pstrKYOKYUCD As String,  _
                    ByVal pstrACBCDFR As String,  _
                    ByVal pstrACBCDTO As String,  _
                    ByVal pstrFAX1 As String,  _
                    ByVal pstrFAX2 As String,  _
                    ByVal pstrMAIL1 As String,  _
                    ByVal pstrMAIL2 As String,  _
                    ByVal pstrNXSEND As String,  _
                    ByVal pstrLSSEND As String,  _
                    ByVal pstrSENDSTR As String,  _
                    ByVal pstrSENDEND As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrZIPFILE As String,  _
                    ByVal pstrBIKOU As String,  _
                    ByVal pstrHASSEI As String,  _
                    ByVal pstrKAIPAGE As String,  _
                    ByVal pstrKIKAN As String,  _
                    ByVal pstrZEROSEND As String,  _
                    ByVal pstrSD_PRT As String,  _
                    ByVal pstrSNDSTOP As String,  _
                    ByVal pstrDEL As String,  _
                    ByVal pstrADD_DATE As String,  _
                    ByVal pstrEDT_DATE As String,  _
                    ByVal pstrADD_DT As String,  _
                    ByVal pstrEDT_DT As String,  _
                    ByVal userState As Object)
            If (Me.mSetRuiautoOperationCompleted Is Nothing) Then
                Me.mSetRuiautoOperationCompleted = AddressOf Me.OnmSetRuiautoOperationCompleted
            End If
            Me.InvokeAsync("mSetRuiauto", New Object() {cdb, pintMODE, pstrKURACD, pstrID, pstrSEND, pstrKYOKYUCD, pstrACBCDFR, pstrACBCDTO, pstrFAX1, pstrFAX2, pstrMAIL1, pstrMAIL2, pstrNXSEND, pstrLSSEND, pstrSENDSTR, pstrSENDEND, pstrMAILPASS, pstrZIPFILE, pstrBIKOU, pstrHASSEI, pstrKAIPAGE, pstrKIKAN, pstrZEROSEND, pstrSD_PRT, pstrSNDSTOP, pstrDEL, pstrADD_DATE, pstrEDT_DATE, pstrADD_DT, pstrEDT_DT}, Me.mSetRuiautoOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSetRuiautoOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSetRuiautoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSetRuiautoCompleted(Me, New mSetRuiautoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MSRUIJAW00/Service1/mCSV", RequestNamespace:="http://tempuri.org/MSRUIJAW00/Service1", ResponseNamespace:="http://tempuri.org/MSRUIJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mCSV(ByVal pstrSessionID As String, ByVal pstrKURACD As String) As String
            Dim results() As Object = Me.Invoke("mCSV", New Object() {pstrSessionID, pstrKURACD})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmCSV(ByVal pstrSessionID As String, ByVal pstrKURACD As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mCSV", New Object() {pstrSessionID, pstrKURACD}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmCSV(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mCSVAsync(ByVal pstrSessionID As String, ByVal pstrKURACD As String)
            Me.mCSVAsync(pstrSessionID, pstrKURACD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mCSVAsync(ByVal pstrSessionID As String, ByVal pstrKURACD As String, ByVal userState As Object)
            If (Me.mCSVOperationCompleted Is Nothing) Then
                Me.mCSVOperationCompleted = AddressOf Me.OnmCSVOperationCompleted
            End If
            Me.InvokeAsync("mCSV", New Object() {pstrSessionID, pstrKURACD}, Me.mCSVOperationCompleted, userState)
        End Sub
        
        Private Sub OnmCSVOperationCompleted(ByVal arg As Object)
            If (Not (Me.mCSVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mCSVCompleted(Me, New mCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/MSRUIJAW00/Service1")>  _
    Partial Public Class CDB
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSetCompletedEventHandler(ByVal sender As Object, ByVal e As mSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSetExCompletedEventHandler(ByVal sender As Object, ByVal e As mSetExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSetExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSetRuiautoCompletedEventHandler(ByVal sender As Object, ByVal e As mSetRuiautoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSetRuiautoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property cdb() As CDB
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),CDB)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mCSVCompletedEventHandler(ByVal sender As Object, ByVal e As mCSVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mCSVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
