'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.42000
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
'
Namespace KETAIJAG00KEFAXJAW00
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="KEFAXJAW00Soap", [Namespace]:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00")>  _
    Partial Public Class KEFAXJAW00
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private mExcelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mExcelSpotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mExcelSpotKillOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fncDataOutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fncExcelDataOutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.JPG.KETAIJAG00.My.MySettings.Default.KETAIJAG00_KETAIJAG00KEFAXJAW00_KEFAXJAW00
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event mExcelCompleted As mExcelCompletedEventHandler
        
        '''<remarks/>
        Public Event mExcelSpotCompleted As mExcelSpotCompletedEventHandler
        
        '''<remarks/>
        Public Event mExcelSpotKillCompleted As mExcelSpotKillCompletedEventHandler
        
        '''<remarks/>
        Public Event fncDataOutCompleted As fncDataOutCompletedEventHandler
        
        '''<remarks/>
        Public Event fncExcelDataOutCompleted As fncExcelDataOutCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEFAXJAW00/KEFAXJAW00/mExcel", RequestNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", ResponseNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mExcel(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String) As String
            Dim results() As Object = Me.Invoke("mExcel", New Object() {pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmExcel(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mExcel", New Object() {pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmExcel(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mExcelAsync(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String)
            Me.mExcelAsync(pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mExcelAsync(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String, ByVal userState As Object)
            If (Me.mExcelOperationCompleted Is Nothing) Then
                Me.mExcelOperationCompleted = AddressOf Me.OnmExcelOperationCompleted
            End If
            Me.InvokeAsync("mExcel", New Object() {pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN}, Me.mExcelOperationCompleted, userState)
        End Sub
        
        Private Sub OnmExcelOperationCompleted(ByVal arg As Object)
            If (Not (Me.mExcelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mExcelCompleted(Me, New mExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEFAXJAW00/KEFAXJAW00/mExcelSpot", RequestNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", ResponseNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mExcelSpot(ByVal pstrRoop As String, ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String) As String
            Dim results() As Object = Me.Invoke("mExcelSpot", New Object() {pstrRoop, pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmExcelSpot(ByVal pstrRoop As String, ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mExcelSpot", New Object() {pstrRoop, pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmExcelSpot(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mExcelSpotAsync(ByVal pstrRoop As String, ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String)
            Me.mExcelSpotAsync(pstrRoop, pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mExcelSpotAsync(ByVal pstrRoop As String, ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal pstrSEND_NAME As String, ByVal pstrSEND_POST As String, ByVal pstrSEND_ADDS As String, ByVal pstrSEND_FAX As String, ByVal pstrSEND_TEL As String, ByVal pstrBtnKBN As String, ByVal userState As Object)
            If (Me.mExcelSpotOperationCompleted Is Nothing) Then
                Me.mExcelSpotOperationCompleted = AddressOf Me.OnmExcelSpotOperationCompleted
            End If
            Me.InvokeAsync("mExcelSpot", New Object() {pstrRoop, pstrSessionID, pstrTEXT_NAME, pstrSEND_NAME, pstrSEND_POST, pstrSEND_ADDS, pstrSEND_FAX, pstrSEND_TEL, pstrBtnKBN}, Me.mExcelSpotOperationCompleted, userState)
        End Sub
        
        Private Sub OnmExcelSpotOperationCompleted(ByVal arg As Object)
            If (Not (Me.mExcelSpotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mExcelSpotCompleted(Me, New mExcelSpotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEFAXJAW00/KEFAXJAW00/mExcelSpotKill", RequestNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", ResponseNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mExcelSpotKill(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String) As String
            Dim results() As Object = Me.Invoke("mExcelSpotKill", New Object() {pstrSessionID, pstrTEXT_NAME})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmExcelSpotKill(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mExcelSpotKill", New Object() {pstrSessionID, pstrTEXT_NAME}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmExcelSpotKill(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mExcelSpotKillAsync(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String)
            Me.mExcelSpotKillAsync(pstrSessionID, pstrTEXT_NAME, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mExcelSpotKillAsync(ByVal pstrSessionID As String, ByVal pstrTEXT_NAME As String, ByVal userState As Object)
            If (Me.mExcelSpotKillOperationCompleted Is Nothing) Then
                Me.mExcelSpotKillOperationCompleted = AddressOf Me.OnmExcelSpotKillOperationCompleted
            End If
            Me.InvokeAsync("mExcelSpotKill", New Object() {pstrSessionID, pstrTEXT_NAME}, Me.mExcelSpotKillOperationCompleted, userState)
        End Sub
        
        Private Sub OnmExcelSpotKillOperationCompleted(ByVal arg As Object)
            If (Not (Me.mExcelSpotKillCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mExcelSpotKillCompleted(Me, New mExcelSpotKillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEFAXJAW00/KEFAXJAW00/fncDataOut", RequestNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", ResponseNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fncDataOut( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String) As String
            Dim results() As Object = Me.Invoke("fncDataOut", New Object() {pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginfncDataOut( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("fncDataOut", New Object() {pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndfncDataOut(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fncDataOutAsync( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String)
            Me.fncDataOutAsync(pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fncDataOutAsync( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String,  _
                    ByVal userState As Object)
            If (Me.fncDataOutOperationCompleted Is Nothing) Then
                Me.fncDataOutOperationCompleted = AddressOf Me.OnfncDataOutOperationCompleted
            End If
            Me.InvokeAsync("fncDataOut", New Object() {pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN}, Me.fncDataOutOperationCompleted, userState)
        End Sub
        
        Private Sub OnfncDataOutOperationCompleted(ByVal arg As Object)
            If (Not (Me.fncDataOutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fncDataOutCompleted(Me, New fncDataOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEFAXJAW00/KEFAXJAW00/fncExcelDataOut", RequestNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", ResponseNamespace:="http://tempuri.org/KEFAXJAW00/KEFAXJAW00", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fncExcelDataOut( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String,  _
                    ByVal pstrSENDFLG As String,  _
                    ByVal pstrMAIL As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrSEND_NAME As String) As String
            Dim results() As Object = Me.Invoke("fncExcelDataOut", New Object() {pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN, pstrSENDFLG, pstrMAIL, pstrMAILPASS, pstrSEND_NAME})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginfncExcelDataOut( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String,  _
                    ByVal pstrSENDFLG As String,  _
                    ByVal pstrMAIL As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrSEND_NAME As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("fncExcelDataOut", New Object() {pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN, pstrSENDFLG, pstrMAIL, pstrMAILPASS, pstrSEND_NAME}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndfncExcelDataOut(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fncExcelDataOutAsync( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String,  _
                    ByVal pstrSENDFLG As String,  _
                    ByVal pstrMAIL As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrSEND_NAME As String)
            Me.fncExcelDataOutAsync(pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN, pstrSENDFLG, pstrMAIL, pstrMAILPASS, pstrSEND_NAME, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fncExcelDataOutAsync( _
                    ByVal pstrSYONO As String,  _
                    ByVal pstrFAX_TITLE As String,  _
                    ByVal pstrACBCD As String,  _
                    ByVal pstrKURACD As String,  _
                    ByVal pstrKANSCD As String,  _
                    ByVal pstrJUSYONM As String,  _
                    ByVal pstrUSER_CD As String,  _
                    ByVal pstrJUTEL1 As String,  _
                    ByVal pstrJUTEL2 As String,  _
                    ByVal pstrRENTEL As String,  _
                    ByVal pstrADDR As String,  _
                    ByVal pstrHATYMD As String,  _
                    ByVal pstrHATTIME As String,  _
                    ByVal pstrKENSIN As String,  _
                    ByVal pstrRYURYO As String,  _
                    ByVal pstrMETASYU As String,  _
                    ByVal pstrKMNM1 As String,  _
                    ByVal pstrKMNM2 As String,  _
                    ByVal pstrKMNM3 As String,  _
                    ByVal pstrKMNM4 As String,  _
                    ByVal pstrKMNM5 As String,  _
                    ByVal pstrKMNM6 As String,  _
                    ByVal pstrTAIOKBN As String,  _
                    ByVal pstrTKTANCD As String,  _
                    ByVal pstrSYOYMD As String,  _
                    ByVal pstrSYOTIME As String,  _
                    ByVal pstrSIJIYMD As String,  _
                    ByVal pstrSIJITIME As String,  _
                    ByVal pstrTAITCD As String,  _
                    ByVal pstrTELRCD As String,  _
                    ByVal pstrFUK_MEMO As String,  _
                    ByVal pstrTEL_MEMO1 As String,  _
                    ByVal pstrTEL_MEMO2 As String,  _
                    ByVal pstrTEL_MEMO4 As String,  _
                    ByVal pstrTEL_MEMO5 As String,  _
                    ByVal pstrTEL_MEMO6 As String,  _
                    ByVal pstrTKIGCD As String,  _
                    ByVal pstrTSADCD As String,  _
                    ByVal pstrFAX_REN As String,  _
                    ByVal pstrMITOKBN As String,  _
                    ByVal pstrSENDFLG As String,  _
                    ByVal pstrMAIL As String,  _
                    ByVal pstrMAILPASS As String,  _
                    ByVal pstrSEND_NAME As String,  _
                    ByVal userState As Object)
            If (Me.fncExcelDataOutOperationCompleted Is Nothing) Then
                Me.fncExcelDataOutOperationCompleted = AddressOf Me.OnfncExcelDataOutOperationCompleted
            End If
            Me.InvokeAsync("fncExcelDataOut", New Object() {pstrSYONO, pstrFAX_TITLE, pstrACBCD, pstrKURACD, pstrKANSCD, pstrJUSYONM, pstrUSER_CD, pstrJUTEL1, pstrJUTEL2, pstrRENTEL, pstrADDR, pstrHATYMD, pstrHATTIME, pstrKENSIN, pstrRYURYO, pstrMETASYU, pstrKMNM1, pstrKMNM2, pstrKMNM3, pstrKMNM4, pstrKMNM5, pstrKMNM6, pstrTAIOKBN, pstrTKTANCD, pstrSYOYMD, pstrSYOTIME, pstrSIJIYMD, pstrSIJITIME, pstrTAITCD, pstrTELRCD, pstrFUK_MEMO, pstrTEL_MEMO1, pstrTEL_MEMO2, pstrTEL_MEMO4, pstrTEL_MEMO5, pstrTEL_MEMO6, pstrTKIGCD, pstrTSADCD, pstrFAX_REN, pstrMITOKBN, pstrSENDFLG, pstrMAIL, pstrMAILPASS, pstrSEND_NAME}, Me.fncExcelDataOutOperationCompleted, userState)
        End Sub
        
        Private Sub OnfncExcelDataOutOperationCompleted(ByVal arg As Object)
            If (Not (Me.fncExcelDataOutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fncExcelDataOutCompleted(Me, New fncExcelDataOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mExcelCompletedEventHandler(ByVal sender As Object, ByVal e As mExcelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mExcelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mExcelSpotCompletedEventHandler(ByVal sender As Object, ByVal e As mExcelSpotCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mExcelSpotCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mExcelSpotKillCompletedEventHandler(ByVal sender As Object, ByVal e As mExcelSpotKillCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mExcelSpotKillCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub fncDataOutCompletedEventHandler(ByVal sender As Object, ByVal e As fncDataOutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fncDataOutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub fncExcelDataOutCompletedEventHandler(ByVal sender As Object, ByVal e As fncExcelDataOutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fncExcelDataOutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
