'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.42000
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
'
Namespace KEJUKJAG00KEJUKJAW00
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="KEJUKJAW00Soap", [Namespace]:="http://tempuri.org/KEJUKJAW00/Service1")>  _
    Partial Public Class KEJUKJAW00
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private mSet_NoRocOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mSet_RocOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mSet_KessonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mKesson_DelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mSet_DuplicateKeihoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mSet_AutoTaiouOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://knapsv/JPGAP/KE/KEJUKJAW/KEJUKJAW00/KEJUKJAW00.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event mSet_NoRocCompleted As mSet_NoRocCompletedEventHandler
        
        '''<remarks/>
        Public Event mSet_RocCompleted As mSet_RocCompletedEventHandler
        
        '''<remarks/>
        Public Event mSet_KessonCompleted As mSet_KessonCompletedEventHandler
        
        '''<remarks/>
        Public Event mKesson_DelCompleted As mKesson_DelCompletedEventHandler
        
        '''<remarks/>
        Public Event mSet_DuplicateKeihoCompleted As mSet_DuplicateKeihoCompletedEventHandler
        
        '''<remarks/>
        Public Event mSet_AutoTaiouCompleted As mSet_AutoTaiouCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEJUKJAW00/Service1/mSet_NoRoc", RequestNamespace:="http://tempuri.org/KEJUKJAW00/Service1", ResponseNamespace:="http://tempuri.org/KEJUKJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSet_NoRoc(ByVal pstrSERIAL As String) As String
            Dim results() As Object = Me.Invoke("mSet_NoRoc", New Object() {pstrSERIAL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSet_NoRoc(ByVal pstrSERIAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSet_NoRoc", New Object() {pstrSERIAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSet_NoRoc(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSet_NoRocAsync(ByVal pstrSERIAL As String)
            Me.mSet_NoRocAsync(pstrSERIAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSet_NoRocAsync(ByVal pstrSERIAL As String, ByVal userState As Object)
            If (Me.mSet_NoRocOperationCompleted Is Nothing) Then
                Me.mSet_NoRocOperationCompleted = AddressOf Me.OnmSet_NoRocOperationCompleted
            End If
            Me.InvokeAsync("mSet_NoRoc", New Object() {pstrSERIAL}, Me.mSet_NoRocOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSet_NoRocOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSet_NoRocCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSet_NoRocCompleted(Me, New mSet_NoRocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEJUKJAW00/Service1/mSet_Roc", RequestNamespace:="http://tempuri.org/KEJUKJAW00/Service1", ResponseNamespace:="http://tempuri.org/KEJUKJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSet_Roc(ByVal pstrSERIAL As String) As String
            Dim results() As Object = Me.Invoke("mSet_Roc", New Object() {pstrSERIAL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSet_Roc(ByVal pstrSERIAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSet_Roc", New Object() {pstrSERIAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSet_Roc(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSet_RocAsync(ByVal pstrSERIAL As String)
            Me.mSet_RocAsync(pstrSERIAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSet_RocAsync(ByVal pstrSERIAL As String, ByVal userState As Object)
            If (Me.mSet_RocOperationCompleted Is Nothing) Then
                Me.mSet_RocOperationCompleted = AddressOf Me.OnmSet_RocOperationCompleted
            End If
            Me.InvokeAsync("mSet_Roc", New Object() {pstrSERIAL}, Me.mSet_RocOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSet_RocOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSet_RocCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSet_RocCompleted(Me, New mSet_RocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEJUKJAW00/Service1/mSet_Kesson", RequestNamespace:="http://tempuri.org/KEJUKJAW00/Service1", ResponseNamespace:="http://tempuri.org/KEJUKJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSet_Kesson(ByVal pintFLG As Integer, ByVal pstrFILE_NAME As String, ByVal pstrUPPER_SERIAL As String) As String
            Dim results() As Object = Me.Invoke("mSet_Kesson", New Object() {pintFLG, pstrFILE_NAME, pstrUPPER_SERIAL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSet_Kesson(ByVal pintFLG As Integer, ByVal pstrFILE_NAME As String, ByVal pstrUPPER_SERIAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSet_Kesson", New Object() {pintFLG, pstrFILE_NAME, pstrUPPER_SERIAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSet_Kesson(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSet_KessonAsync(ByVal pintFLG As Integer, ByVal pstrFILE_NAME As String, ByVal pstrUPPER_SERIAL As String)
            Me.mSet_KessonAsync(pintFLG, pstrFILE_NAME, pstrUPPER_SERIAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSet_KessonAsync(ByVal pintFLG As Integer, ByVal pstrFILE_NAME As String, ByVal pstrUPPER_SERIAL As String, ByVal userState As Object)
            If (Me.mSet_KessonOperationCompleted Is Nothing) Then
                Me.mSet_KessonOperationCompleted = AddressOf Me.OnmSet_KessonOperationCompleted
            End If
            Me.InvokeAsync("mSet_Kesson", New Object() {pintFLG, pstrFILE_NAME, pstrUPPER_SERIAL}, Me.mSet_KessonOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSet_KessonOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSet_KessonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSet_KessonCompleted(Me, New mSet_KessonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEJUKJAW00/Service1/mKesson_Del", RequestNamespace:="http://tempuri.org/KEJUKJAW00/Service1", ResponseNamespace:="http://tempuri.org/KEJUKJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mKesson_Del(ByVal pintDelCnt As Integer, ByVal pstrDelKeys As String) As String
            Dim results() As Object = Me.Invoke("mKesson_Del", New Object() {pintDelCnt, pstrDelKeys})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmKesson_Del(ByVal pintDelCnt As Integer, ByVal pstrDelKeys As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mKesson_Del", New Object() {pintDelCnt, pstrDelKeys}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmKesson_Del(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mKesson_DelAsync(ByVal pintDelCnt As Integer, ByVal pstrDelKeys As String)
            Me.mKesson_DelAsync(pintDelCnt, pstrDelKeys, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mKesson_DelAsync(ByVal pintDelCnt As Integer, ByVal pstrDelKeys As String, ByVal userState As Object)
            If (Me.mKesson_DelOperationCompleted Is Nothing) Then
                Me.mKesson_DelOperationCompleted = AddressOf Me.OnmKesson_DelOperationCompleted
            End If
            Me.InvokeAsync("mKesson_Del", New Object() {pintDelCnt, pstrDelKeys}, Me.mKesson_DelOperationCompleted, userState)
        End Sub
        
        Private Sub OnmKesson_DelOperationCompleted(ByVal arg As Object)
            If (Not (Me.mKesson_DelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mKesson_DelCompleted(Me, New mKesson_DelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEJUKJAW00/Service1/mSet_DuplicateKeiho", RequestNamespace:="http://tempuri.org/KEJUKJAW00/Service1", ResponseNamespace:="http://tempuri.org/KEJUKJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSet_DuplicateKeiho(ByVal pstrSYORI_SERIAL As String) As String
            Dim results() As Object = Me.Invoke("mSet_DuplicateKeiho", New Object() {pstrSYORI_SERIAL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSet_DuplicateKeiho(ByVal pstrSYORI_SERIAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSet_DuplicateKeiho", New Object() {pstrSYORI_SERIAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSet_DuplicateKeiho(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSet_DuplicateKeihoAsync(ByVal pstrSYORI_SERIAL As String)
            Me.mSet_DuplicateKeihoAsync(pstrSYORI_SERIAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSet_DuplicateKeihoAsync(ByVal pstrSYORI_SERIAL As String, ByVal userState As Object)
            If (Me.mSet_DuplicateKeihoOperationCompleted Is Nothing) Then
                Me.mSet_DuplicateKeihoOperationCompleted = AddressOf Me.OnmSet_DuplicateKeihoOperationCompleted
            End If
            Me.InvokeAsync("mSet_DuplicateKeiho", New Object() {pstrSYORI_SERIAL}, Me.mSet_DuplicateKeihoOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSet_DuplicateKeihoOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSet_DuplicateKeihoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSet_DuplicateKeihoCompleted(Me, New mSet_DuplicateKeihoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KEJUKJAW00/Service1/mSet_AutoTaiou", RequestNamespace:="http://tempuri.org/KEJUKJAW00/Service1", ResponseNamespace:="http://tempuri.org/KEJUKJAW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mSet_AutoTaiou(ByVal pstrSYORI_SERIAL As String) As String
            Dim results() As Object = Me.Invoke("mSet_AutoTaiou", New Object() {pstrSYORI_SERIAL})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmSet_AutoTaiou(ByVal pstrSYORI_SERIAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mSet_AutoTaiou", New Object() {pstrSYORI_SERIAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmSet_AutoTaiou(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mSet_AutoTaiouAsync(ByVal pstrSYORI_SERIAL As String)
            Me.mSet_AutoTaiouAsync(pstrSYORI_SERIAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mSet_AutoTaiouAsync(ByVal pstrSYORI_SERIAL As String, ByVal userState As Object)
            If (Me.mSet_AutoTaiouOperationCompleted Is Nothing) Then
                Me.mSet_AutoTaiouOperationCompleted = AddressOf Me.OnmSet_AutoTaiouOperationCompleted
            End If
            Me.InvokeAsync("mSet_AutoTaiou", New Object() {pstrSYORI_SERIAL}, Me.mSet_AutoTaiouOperationCompleted, userState)
        End Sub
        
        Private Sub OnmSet_AutoTaiouOperationCompleted(ByVal arg As Object)
            If (Not (Me.mSet_AutoTaiouCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mSet_AutoTaiouCompleted(Me, New mSet_AutoTaiouCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSet_NoRocCompletedEventHandler(ByVal sender As Object, ByVal e As mSet_NoRocCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSet_NoRocCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSet_RocCompletedEventHandler(ByVal sender As Object, ByVal e As mSet_RocCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSet_RocCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSet_KessonCompletedEventHandler(ByVal sender As Object, ByVal e As mSet_KessonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSet_KessonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mKesson_DelCompletedEventHandler(ByVal sender As Object, ByVal e As mKesson_DelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mKesson_DelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSet_DuplicateKeihoCompletedEventHandler(ByVal sender As Object, ByVal e As mSet_DuplicateKeihoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSet_DuplicateKeihoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mSet_AutoTaiouCompletedEventHandler(ByVal sender As Object, ByVal e As mSet_AutoTaiouCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mSet_AutoTaiouCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
