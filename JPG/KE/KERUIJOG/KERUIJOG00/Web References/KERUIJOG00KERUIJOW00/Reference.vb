'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:4.0.30319.42000
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'このソース コードは Microsoft.VSDesigner、バージョン 4.0.30319.42000 によって自動生成されました。
'
Namespace KERUIJOG00KERUIJOW00
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="KERUIJOW00Soap", [Namespace]:="http://tempuri.org/KERUIJOW00/Service1")>  _
    Partial Public Class KERUIJOW00
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private mCheckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mCheck2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private mExcelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mExcel3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private compressStr2Arc2StrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://knapsv/JPGAP/KE/KERUIJOW/KERUIJOW00/KERUIJOW00.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event mCheckCompleted As mCheckCompletedEventHandler
        
        '''<remarks/>
        Public Event mCheck2Completed As mCheck2CompletedEventHandler
        
        '''<remarks/>
        Public Event mExcelCompleted As mExcelCompletedEventHandler
        
        '''<remarks/>
        Public Event mExcel3Completed As mExcel3CompletedEventHandler
        
        '''<remarks/>
        Public Event compressStr2Arc2StrCompleted As compressStr2Arc2StrCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KERUIJOW00/Service1/mCheck", RequestNamespace:="http://tempuri.org/KERUIJOW00/Service1", ResponseNamespace:="http://tempuri.org/KERUIJOW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mCheck( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String) As String
            Dim results() As Object = Me.Invoke("mCheck", New Object() {pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmCheck( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mCheck", New Object() {pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmCheck(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mCheckAsync( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String)
            Me.mCheckAsync(pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mCheckAsync( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal userState As Object)
            If (Me.mCheckOperationCompleted Is Nothing) Then
                Me.mCheckOperationCompleted = AddressOf Me.OnmCheckOperationCompleted
            End If
            Me.InvokeAsync("mCheck", New Object() {pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo}, Me.mCheckOperationCompleted, userState)
        End Sub
        
        Private Sub OnmCheckOperationCompleted(ByVal arg As Object)
            If (Not (Me.mCheckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mCheckCompleted(Me, New mCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KERUIJOW00/Service1/mCheck2", RequestNamespace:="http://tempuri.org/KERUIJOW00/Service1", ResponseNamespace:="http://tempuri.org/KERUIJOW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mCheck2( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String) As String
            Dim results() As Object = Me.Invoke("mCheck2", New Object() {pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmCheck2( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mCheck2", New Object() {pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmCheck2(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mCheck2Async( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String)
            Me.mCheck2Async(pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mCheck2Async( _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal userState As Object)
            If (Me.mCheck2OperationCompleted Is Nothing) Then
                Me.mCheck2OperationCompleted = AddressOf Me.OnmCheck2OperationCompleted
            End If
            Me.InvokeAsync("mCheck2", New Object() {pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrTrgFrom, pstrTrgTo, pdecPageMax, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo}, Me.mCheck2OperationCompleted, userState)
        End Sub
        
        Private Sub OnmCheck2OperationCompleted(ByVal arg As Object)
            If (Not (Me.mCheck2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mCheck2Completed(Me, New mCheck2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KERUIJOW00/Service1/mExcel", RequestNamespace:="http://tempuri.org/KERUIJOW00/Service1", ResponseNamespace:="http://tempuri.org/KERUIJOW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mExcel( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal pstrSdPrt As String) As String
            Dim results() As Object = Me.Invoke("mExcel", New Object() {pstrSessionID, pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo, pstrSdPrt})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmExcel( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal pstrSdPrt As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mExcel", New Object() {pstrSessionID, pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo, pstrSdPrt}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmExcel(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mExcelAsync( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal pstrSdPrt As String)
            Me.mExcelAsync(pstrSessionID, pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo, pstrSdPrt, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mExcelAsync( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJacdFr As String,  _
                    ByVal pstrJacdTo As String,  _
                    ByVal pstrJascdFr As String,  _
                    ByVal pstrJascdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal pstrSdPrt As String,  _
                    ByVal userState As Object)
            If (Me.mExcelOperationCompleted Is Nothing) Then
                Me.mExcelOperationCompleted = AddressOf Me.OnmExcelOperationCompleted
            End If
            Me.InvokeAsync("mExcel", New Object() {pstrSessionID, pstrKuracd, pstrKyocd, pstrJacdFr, pstrJacdTo, pstrJascdFr, pstrJascdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo, pstrSdPrt}, Me.mExcelOperationCompleted, userState)
        End Sub
        
        Private Sub OnmExcelOperationCompleted(ByVal arg As Object)
            If (Not (Me.mExcelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mExcelCompleted(Me, New mExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KERUIJOW00/Service1/mExcel3", RequestNamespace:="http://tempuri.org/KERUIJOW00/Service1", ResponseNamespace:="http://tempuri.org/KERUIJOW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mExcel3( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrZeroSend As String,  _
                    ByVal pstrSdPrt As String,  _
                    ByVal pbolLzhAutoExec As Boolean,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrZipFlg As String,  _
                    ByVal pstrfaxNo() As String,  _
                    ByVal pstrmailADD() As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String) As String
            Dim results() As Object = Me.Invoke("mExcel3", New Object() {pstrSessionID, pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrZeroSend, pstrSdPrt, pbolLzhAutoExec, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrZipFlg, pstrfaxNo, pstrmailADD, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginmExcel3( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrZeroSend As String,  _
                    ByVal pstrSdPrt As String,  _
                    ByVal pbolLzhAutoExec As Boolean,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrZipFlg As String,  _
                    ByVal pstrfaxNo() As String,  _
                    ByVal pstrmailADD() As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("mExcel3", New Object() {pstrSessionID, pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrZeroSend, pstrSdPrt, pbolLzhAutoExec, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrZipFlg, pstrfaxNo, pstrmailADD, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmExcel3(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mExcel3Async( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrZeroSend As String,  _
                    ByVal pstrSdPrt As String,  _
                    ByVal pbolLzhAutoExec As Boolean,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrZipFlg As String,  _
                    ByVal pstrfaxNo() As String,  _
                    ByVal pstrmailADD() As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String)
            Me.mExcel3Async(pstrSessionID, pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrZeroSend, pstrSdPrt, pbolLzhAutoExec, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrZipFlg, pstrfaxNo, pstrmailADD, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mExcel3Async( _
                    ByVal pstrSessionID As String,  _
                    ByVal pstrKuracd As String,  _
                    ByVal pstrKyocd As String,  _
                    ByVal pstrJaCdFr As String,  _
                    ByVal pstrJaCdTo As String,  _
                    ByVal pstrJasCdFr As String,  _
                    ByVal pstrJasCdTo As String,  _
                    ByVal pstrStkbn As String,  _
                    ByVal pstrPgkbn As String,  _
                    ByVal pstrTrgFrom As String,  _
                    ByVal pstrTrgTo As String,  _
                    ByVal pstrKuraNm As String,  _
                    ByVal pstrKyoNm As String,  _
                    ByVal pstrJaNmFr As String,  _
                    ByVal pstrJaNmTo As String,  _
                    ByVal pstrJasNmFr As String,  _
                    ByVal pstrJasNmTo As String,  _
                    ByVal pdecPageMax As Decimal,  _
                    ByVal pstrCentcd As String,  _
                    ByVal pstrZeroSend As String,  _
                    ByVal pstrSdPrt As String,  _
                    ByVal pbolLzhAutoExec As Boolean,  _
                    ByVal pstrHanbaiCdFr As String,  _
                    ByVal pstrHanbaiCdTo As String,  _
                    ByVal pstrTaikbn As String,  _
                    ByVal pstrHkkbn As String,  _
                    ByVal pstrHanbaiNmFr As String,  _
                    ByVal pstrHanbaiNmTo As String,  _
                    ByVal pstrZipFlg As String,  _
                    ByVal pstrfaxNo() As String,  _
                    ByVal pstrmailADD() As String,  _
                    ByVal pstrKikankbn As String,  _
                    ByVal pstrTrgTimeFrom As String,  _
                    ByVal pstrTrgTimeTo As String,  _
                    ByVal userState As Object)
            If (Me.mExcel3OperationCompleted Is Nothing) Then
                Me.mExcel3OperationCompleted = AddressOf Me.OnmExcel3OperationCompleted
            End If
            Me.InvokeAsync("mExcel3", New Object() {pstrSessionID, pstrKuracd, pstrKyocd, pstrJaCdFr, pstrJaCdTo, pstrJasCdFr, pstrJasCdTo, pstrStkbn, pstrPgkbn, pstrTrgFrom, pstrTrgTo, pstrKuraNm, pstrKyoNm, pstrJaNmFr, pstrJaNmTo, pstrJasNmFr, pstrJasNmTo, pdecPageMax, pstrCentcd, pstrZeroSend, pstrSdPrt, pbolLzhAutoExec, pstrHanbaiCdFr, pstrHanbaiCdTo, pstrTaikbn, pstrHkkbn, pstrHanbaiNmFr, pstrHanbaiNmTo, pstrZipFlg, pstrfaxNo, pstrmailADD, pstrKikankbn, pstrTrgTimeFrom, pstrTrgTimeTo}, Me.mExcel3OperationCompleted, userState)
        End Sub
        
        Private Sub OnmExcel3OperationCompleted(ByVal arg As Object)
            If (Not (Me.mExcel3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mExcel3Completed(Me, New mExcel3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KERUIJOW00/Service1/compressStr2Arc2Str", RequestNamespace:="http://tempuri.org/KERUIJOW00/Service1", ResponseNamespace:="http://tempuri.org/KERUIJOW00/Service1", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function compressStr2Arc2Str(ByVal pFileName As String, ByVal pBase64Data As String, ByVal pPass As String) As String
            Dim results() As Object = Me.Invoke("compressStr2Arc2Str", New Object() {pFileName, pBase64Data, pPass})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BegincompressStr2Arc2Str(ByVal pFileName As String, ByVal pBase64Data As String, ByVal pPass As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("compressStr2Arc2Str", New Object() {pFileName, pBase64Data, pPass}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndcompressStr2Arc2Str(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub compressStr2Arc2StrAsync(ByVal pFileName As String, ByVal pBase64Data As String, ByVal pPass As String)
            Me.compressStr2Arc2StrAsync(pFileName, pBase64Data, pPass, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub compressStr2Arc2StrAsync(ByVal pFileName As String, ByVal pBase64Data As String, ByVal pPass As String, ByVal userState As Object)
            If (Me.compressStr2Arc2StrOperationCompleted Is Nothing) Then
                Me.compressStr2Arc2StrOperationCompleted = AddressOf Me.OncompressStr2Arc2StrOperationCompleted
            End If
            Me.InvokeAsync("compressStr2Arc2Str", New Object() {pFileName, pBase64Data, pPass}, Me.compressStr2Arc2StrOperationCompleted, userState)
        End Sub
        
        Private Sub OncompressStr2Arc2StrOperationCompleted(ByVal arg As Object)
            If (Not (Me.compressStr2Arc2StrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent compressStr2Arc2StrCompleted(Me, New compressStr2Arc2StrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mCheckCompletedEventHandler(ByVal sender As Object, ByVal e As mCheckCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mCheckCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mCheck2CompletedEventHandler(ByVal sender As Object, ByVal e As mCheck2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mCheck2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mExcelCompletedEventHandler(ByVal sender As Object, ByVal e As mExcelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mExcelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub mExcel3CompletedEventHandler(ByVal sender As Object, ByVal e As mExcel3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mExcel3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")>  _
    Public Delegate Sub compressStr2Arc2StrCompletedEventHandler(ByVal sender As Object, ByVal e As compressStr2Arc2StrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class compressStr2Arc2StrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
